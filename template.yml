AWSTemplateFormatVersion: '2010-09-09'
Description: "Create an EC2 instance with Security Group and attach it to an Application Load Balancer using CloudFormation"

Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
    Description: Enter EC2 Instance Type
    AllowedValues: 
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
    ConstraintDescription: must be a valid EC2 instance type from the list above

Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP access
      VpcId: vpc-0b2314f15989bf7e3
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: ami-0cfde0ea8edd312d4
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetId: subnet-0862aaba6928cbc39 
      Tags:
        - Key: Name
          Value: MyEC2Instance-demo
      UserData:
        Fn::Base64: |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Hello from EC2 via ALB</h1>" > /var/www/html/index.html

  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MyTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: vpc-0b2314f15989bf7e3
      TargetType: instance
      HealthCheckPath: /
      Targets:
        - Id: !Ref MyEC2Instance
          Port: 80

  MyElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyApplicationLoadBalancer
      Subnets:
        - subnet-0862aaba6928cbc39   
      SecurityGroups:
        - !Ref MySecurityGroup
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4
      Tags:
        - Key: Name
          Value: MyALB-demo

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyElasticLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup

Outputs:
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref MyEC2Instance

  LoadBalancerDNSName:
    Description: DNS name of the Load Balancer
    Value: !GetAtt MyElasticLoadBalancer.DNSName